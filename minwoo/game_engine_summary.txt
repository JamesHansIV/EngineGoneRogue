A game engine is a software framework that allows developers to build games without worrying about low-level details and implementations. Commercial game engines such as Unity and Unreal engine will usually come equipped with a wide variety of tools and resources, but most game engines will at least provide a rendering engine, physics engine, collision detection, audio handling, memory management, animation, and scene management. The rendering engine draws images to screen. A game engine will provide methods to apply target behavior and game logic through the use of scripting to alter the rendering engine. The rendering engine might have buffers that hold a sequence of frames and enact certain procedures to compose each frame, such as the application of textures and shaders. The physics engine will handle collision detection along with the logic that determine the movement of objects within the game environment. Large objects should move slower than small objects, and projectiles could be influenced by the weather or other game objects, for example. A game engine would also provide the ability to output sound during certain game events such as object collision, which includes music, if desired. Animation is the action of stringing a sequence of images together to create a dynamic, moving object. Animations can be saved and applied to objects within the game environment. The game engine will also allow the construction of scenes within the game. It achieves this by providing a blank template that houses an invisible coordinate system in which game objects can be placed to interact with each other.

