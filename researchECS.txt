After doing research over the various properties of the entity component system, we have decided to begin our project with object
oriented programming. While there are performance benefits to building with the ECS pattern, it would be too difficult
to initiate it because our team isn't familiar with it. OOP gives us a better conceptual grasp of the different components of our
engine, allowing us to begin building it at a decent pace, avoiding burnout and initiation delays. A game engine is a large
project, and we need to get things done at a reasonable pace to accomplish our original goals. The entity component system
considers every property, e.g. such as position, to be a component that stores the data of every entity, which may have multiple
components that it inherits from. A game enemy, for example, is an entity that would have a health component and an attack
damage component. ECS is almost the opposite of OOP because its main focus is on the property of a given object rather than
object itself. For now, this would be too confusing to start the project with. We should integrate this later when we have
a more solid grasp of the engine structure.